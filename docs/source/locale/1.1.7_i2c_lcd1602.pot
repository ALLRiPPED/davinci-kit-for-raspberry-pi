# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, sunfounder
# This file is distributed under the same license as the SunFounder Da Vinci Kit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: SunFounder Da Vinci Kit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-08-06 17:51+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../1.1.7_i2c_lcd1602.rst:2
msgid "1.1.7 I2C LCD1602"
msgstr ""

#: ../1.1.7_i2c_lcd1602.rst:5
msgid "Introduction"
msgstr ""

#: ../1.1.7_i2c_lcd1602.rst:7
msgid "LCD1602 is a character type liquid crystal display, which can display 32 (16*2) characters at the same time."
msgstr ""

#: ../1.1.7_i2c_lcd1602.rst:11
msgid "Components"
msgstr ""

#: ../1.1.7_i2c_lcd1602.rst:16
msgid "Principle"
msgstr ""

#: ../1.1.7_i2c_lcd1602.rst:18
msgid "**I2C LCD1602**"
msgstr ""

#: ../1.1.7_i2c_lcd1602.rst:20
msgid "As we all know, though LCD and some other displays greatly enrich the man-machine interaction, they share a common weakness. When they are connected to a controller, multiple IOs will be occupied of the controller which has no so many outer ports. Also it restricts other functions of the controller. Therefore, LCD1602 with an I2C bus is developed to solve the problem."
msgstr ""

#: ../1.1.7_i2c_lcd1602.rst:29
msgid "**I2C communication**"
msgstr ""

#: ../1.1.7_i2c_lcd1602.rst:31
msgid "I2C(Inter-Integrated Circuit) bus is a very popular and powerful bus for communication between a master device (or master devices) and a single or multiple slave devices."
msgstr ""

#: ../1.1.7_i2c_lcd1602.rst:35
msgid "I2C main controller can be used to control IO expander, various sensors, EEPROM, ADC/DAC and so on. All of these are controlled only by the two pins of host, the serial data (SDA1) line and the serial clock line(SCL1)."
msgstr ""

#: ../1.1.7_i2c_lcd1602.rst:41
msgid "Schematic Diagram"
msgstr ""

#: ../1.1.7_i2c_lcd1602.rst:44
msgid "T-Board Name"
msgstr ""

#: ../1.1.7_i2c_lcd1602.rst:44
msgid "physical"
msgstr ""

#: ../1.1.7_i2c_lcd1602.rst:45
msgid "SDA1"
msgstr ""

#: ../1.1.7_i2c_lcd1602.rst:45
msgid "Pin 3"
msgstr ""

#: ../1.1.7_i2c_lcd1602.rst:46
msgid "SCL1"
msgstr ""

#: ../1.1.7_i2c_lcd1602.rst:46
msgid "Pin 5"
msgstr ""

#: ../1.1.7_i2c_lcd1602.rst:53
msgid "Experimental Procedures"
msgstr ""

#: ../1.1.7_i2c_lcd1602.rst:55
msgid "**Step 1:** Build the circuit."
msgstr ""

#: ../1.1.7_i2c_lcd1602.rst:60
msgid "**Step 2**: Setup I2C (see :ref:`I2C Configuration`. If you have set I2C, skip this step.)"
msgstr ""

#: ../1.1.7_i2c_lcd1602.rst:63
msgid "For C Language Users"
msgstr ""

#: ../1.1.7_i2c_lcd1602.rst:65
#: ../1.1.7_i2c_lcd1602.rst:235
msgid "**Step 3:** Change directory."
msgstr ""

#: ../1.1.7_i2c_lcd1602.rst:75
msgid "**Step 4:** Compile."
msgstr ""

#: ../1.1.7_i2c_lcd1602.rst:85
msgid "**Step 5:** Run."
msgstr ""

#: ../1.1.7_i2c_lcd1602.rst:95
#: ../1.1.7_i2c_lcd1602.rst:255
msgid "After the code runs, you can see ”Greetings”,”From SunFounder” displaying on the LCD."
msgstr ""

#: ../1.1.7_i2c_lcd1602.rst:97
#: ../1.1.7_i2c_lcd1602.rst:257
msgid "**Code**"
msgstr ""

#: ../1.1.7_i2c_lcd1602.rst:200
#: ../1.1.7_i2c_lcd1602.rst:288
msgid "**Code Explanation**"
msgstr ""

#: ../1.1.7_i2c_lcd1602.rst:211
msgid "These functions are used to control I2C LCD1602 open source code. They allow us to easily use I2C LCD1602. Among these functions, init() is used for initialization, clear() is used to clear the screen, write() is used to write what is displayed, and other functions support the above functions."
msgstr ""

#: ../1.1.7_i2c_lcd1602.rst:218
msgid "This function initializes the I2C system with the specified device symbol. The prototype of the function:"
msgstr ""

#: ../1.1.7_i2c_lcd1602.rst:224
msgid "Parameters devId is the address of the I2C device, it can be found through the i2cdetect command(see Appendix) and the devId of I2C LCD1602 is generally 0x27."
msgstr ""

#: ../1.1.7_i2c_lcd1602.rst:230
msgid "In this function, data[] is the character to be printed on the LCD, and the parameters x and y determine the printing position (line y+1, column x+1 is the starting position of the character to be printed)."
msgstr ""

#: ../1.1.7_i2c_lcd1602.rst:233
msgid "For Python Language Users"
msgstr ""

#: ../1.1.7_i2c_lcd1602.rst:245
msgid "**Step 4:** Run."
msgstr ""

#: ../1.1.7_i2c_lcd1602.rst:261
msgid "You can **Modify/Reset/Copy/Run/Stop** the code below. But before that, you need to go to  source code path like ``davinci-kit-for-raspberry-pi\\\\python``."
msgstr ""

#: ../1.1.7_i2c_lcd1602.rst:294
msgid "This file is an open source file for controlling I2C LCD1602. It allows us to easily use I2C LCD1602."
msgstr ""

#: ../1.1.7_i2c_lcd1602.rst:300
msgid "The function initializes the I2C system with the designated device symbol. The first parameter is the address of the I2C device, which can be detected through the i2cdetect command (see Appendix for details). The address of I2C LCD1602 is generally 0x27."
msgstr ""

#: ../1.1.7_i2c_lcd1602.rst:306
msgid "Within this function, 'Greetings!! ' is the character to be printed on the Row 0+1, column 0+1 on LCD. Now you can see “Greetings! From SunFounder” displayed on the LCD."
msgstr ""

#: ../1.1.7_i2c_lcd1602.rst:310
msgid "Phenomenon Picture"
msgstr ""
