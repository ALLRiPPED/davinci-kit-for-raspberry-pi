# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, sunfounder
# This file is distributed under the same license as the SunFounder Da Vinci Kit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: SunFounder Da Vinci Kit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-08-07 09:33+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../2.2.6_mpu6050_module.rst:2
msgid "2.2.6 MPU6050 Module"
msgstr ""

#: ../2.2.6_mpu6050_module.rst:5
msgid "Introduction"
msgstr ""

#: ../2.2.6_mpu6050_module.rst:7
msgid "The MPU-6050 is the world’s first and only 6-axis motion tracking devices (3-axis Gyroscope and 3-axis Accelerometer) designed for smartphones, tablets and wearable sensors that have these features, including the low power, low cost, and high performance requirements."
msgstr ""

#: ../2.2.6_mpu6050_module.rst:12
msgid "In this experiment, use I2C to obtain the values of the three-axis acceleration sensor and three-axis gyroscope for MPU6050 and display them on the screen."
msgstr ""

#: ../2.2.6_mpu6050_module.rst:17
msgid "Components"
msgstr ""

#: ../2.2.6_mpu6050_module.rst:23
msgid "Principle"
msgstr ""

#: ../2.2.6_mpu6050_module.rst:25
msgid "**MPU6050**"
msgstr ""

#: ../2.2.6_mpu6050_module.rst:27
msgid "The MPU-6050 is a 6-axis(combines 3-axis Gyroscope, 3-axis Accelerometer) motion tracking devices."
msgstr ""

#: ../2.2.6_mpu6050_module.rst:30
msgid "Its three coordinate systems are defined as follows:"
msgstr ""

#: ../2.2.6_mpu6050_module.rst:32
msgid "Put MPU6050 flat on the table, assure that the face with label is upward and a dot on this surface is on the top left corner. Then the upright direction upward is the z-axis of the chip. The direction from left to right is regarded as the X-axis. Accordingly the direction from back to front is defined as the Y-axis."
msgstr ""

#: ../2.2.6_mpu6050_module.rst:41
msgid "**3-axis Accelerometer**"
msgstr ""

#: ../2.2.6_mpu6050_module.rst:43
msgid "The accelerometer works on the principle of piezo electric effect, the ability of certain materials to generate an electric charge in response to applied mechanical stress."
msgstr ""

#: ../2.2.6_mpu6050_module.rst:47
msgid "Here, imagine a cuboidal box, having a small ball inside it, like in the picture above. The walls of this box are made with piezo electric crystals. Whenever you tilt the box, the ball is forced to move in the direction of the inclination, due to gravity. The wall with which the ball collides, creates tiny piezo electric currents. There are totally, three pairs of opposite walls in a cuboid. Each pair corresponds to an axis in 3D space: X, Y and Z axes. Depending on the current produced from the piezo electric walls, we can determine the direction of inclination and its magnitude."
msgstr ""

#: ../2.2.6_mpu6050_module.rst:60
msgid "We can use the MPU6050 to detect its acceleration on each coordinate axis (in the stationary desktop state, the Z-axis acceleration is 1 gravity unit, and the X and Y axes are 0). If it is tilted or in a weightless/overweight condition, the corresponding reading will change."
msgstr ""

#: ../2.2.6_mpu6050_module.rst:65
msgid "There are four kinds of measuring ranges that can be selected programmatically: +/-2g, +/-4g, +/-8g, and +/-16g (2g by default) corresponding to each precision. Values range from -32768 to 32767."
msgstr ""

#: ../2.2.6_mpu6050_module.rst:69
msgid "The reading of accelerometer is converted to an acceleration value by mapping the reading from the reading range to the measuring range."
msgstr ""

#: ../2.2.6_mpu6050_module.rst:72
msgid "Acceleration = (Accelerometer axis raw data / 65536 \\* full scale Acceleration range) g"
msgstr ""

#: ../2.2.6_mpu6050_module.rst:75
msgid "Take the X-axis as an example, when Accelerometer X axis raw data is 16384 and the range is selected as +/-2g:"
msgstr ""

#: ../2.2.6_mpu6050_module.rst:78
msgid "**Acceleration along the X axis = (16384 / 65536 \\* 4) g**  **=1g**"
msgstr ""

#: ../2.2.6_mpu6050_module.rst:80
msgid "**3-axis Gyroscope**"
msgstr ""

#: ../2.2.6_mpu6050_module.rst:82
msgid "Gyroscopes work on the principle of Coriolis acceleration. Imagine that there is a fork like structure, that is in constant back and forth motion. It is held in place using piezo electric crystals. Whenever, you try to tilt this arrangement, the crystals experience a force in the direction of inclination. This is caused as a result of the inertia of the moving fork. The crystals thus produce a current in consensus with the piezo electric effect, and this current is amplified."
msgstr ""

#: ../2.2.6_mpu6050_module.rst:92
msgid "The Gyroscope also has four kinds of measuring ranges: +/- 250, +/- 500, +/- 1000, +/- 2000. The calculation method and Acceleration are basically consistent."
msgstr ""

#: ../2.2.6_mpu6050_module.rst:96
msgid "The formula for converting the reading into angular velocity is as follows:"
msgstr ""

#: ../2.2.6_mpu6050_module.rst:99
msgid "Angular velocity = (Gyroscope axis raw data / 65536 \\* full scale Gyroscope range) °/s"
msgstr ""

#: ../2.2.6_mpu6050_module.rst:102
msgid "The X axis, for example, the Accelerometer X axis raw data is 16384 and ranges + / - 250°/ s:"
msgstr ""

#: ../2.2.6_mpu6050_module.rst:105
msgid "**Angular velocity along the X axis = (16384 / 65536 \\* 500)°/s** **=125°/s**"
msgstr ""

#: ../2.2.6_mpu6050_module.rst:108
msgid "Schematic Diagram"
msgstr ""

#: ../2.2.6_mpu6050_module.rst:110
msgid "MPU6050 communicates with the microcontroller through the I2C bus interface. The SDA1 and SCL1 need to be connected to the corresponding pin."
msgstr ""

#: ../2.2.6_mpu6050_module.rst:118
msgid "Experimental Procedures"
msgstr ""

#: ../2.2.6_mpu6050_module.rst:120
msgid "**Step 1:** Build the circuit."
msgstr ""

#: ../2.2.6_mpu6050_module.rst:125
msgid "**Step 2**: Setup I2C (see Appendix. If you have set I2C, skip this step.)"
msgstr ""

#: ../2.2.6_mpu6050_module.rst:129
msgid "For C Language Users"
msgstr ""

#: ../2.2.6_mpu6050_module.rst:131
#: ../2.2.6_mpu6050_module.rst:337
msgid "**Step 3:** Go to the folder of the code."
msgstr ""

#: ../2.2.6_mpu6050_module.rst:141
msgid "**Step 4:** Compile the code."
msgstr ""

#: ../2.2.6_mpu6050_module.rst:151
msgid "**Step 5:** Run the executable file."
msgstr ""

#: ../2.2.6_mpu6050_module.rst:161
msgid "With the code run, deflection angle of x axis, y axis and the acceleration, angular velocity on each axis read by MPU6050 will be printed on the screen after being calculating."
msgstr ""

#: ../2.2.6_mpu6050_module.rst:165
#: ../2.2.6_mpu6050_module.rst:361
msgid "**Code**"
msgstr ""

#: ../2.2.6_mpu6050_module.rst:251
#: ../2.2.6_mpu6050_module.rst:443
msgid "**Code Explanation**"
msgstr ""

#: ../2.2.6_mpu6050_module.rst:266
#: ../2.2.6_mpu6050_module.rst:460
msgid "Read sensor data sent from MPU6050."
msgstr ""

#: ../2.2.6_mpu6050_module.rst:277
msgid "We get the deflection angle on the Y-axis."
msgstr ""

#: ../2.2.6_mpu6050_module.rst:288
msgid "Calculate the deflection angle of the X-axis."
msgstr ""

#: ../2.2.6_mpu6050_module.rst:305
#: ../2.2.6_mpu6050_module.rst:489
msgid "Read the values of the x axis, y axis and z axis on the gyroscope sensor, convert the metadata to angular velocity values, and then print them."
msgstr ""

#: ../2.2.6_mpu6050_module.rst:323
msgid "Read the values of the x axis, y axis and z axis on the acceleration sensor, convert the metadata to accelerated speed values (gravity unit), and then print them."
msgstr ""

#: ../2.2.6_mpu6050_module.rst:332
#: ../2.2.6_mpu6050_module.rst:515
msgid "Print the deflection angles of the x-axis and y-axis."
msgstr ""

#: ../2.2.6_mpu6050_module.rst:335
msgid "For Python Language Users"
msgstr ""

#: ../2.2.6_mpu6050_module.rst:347
msgid "**Step 4:** Run the executable file."
msgstr ""

#: ../2.2.6_mpu6050_module.rst:357
msgid "With the code run, the angle of deflection of the x-axis and y-axis and the acceleration, angular velocity on each axis read by MPU6050 will be printed on the screen after being calculating."
msgstr ""

#: ../2.2.6_mpu6050_module.rst:366
msgid "You can **Modify/Reset/Copy/Run/Stop** the code below. But before that, you need to go to  source code path like ``davinci-kit-for-raspberry-pi\\\\python``."
msgstr ""

#: ../2.2.6_mpu6050_module.rst:469
msgid "Calculate the deflection angle of the y-axis."
msgstr ""

#: ../2.2.6_mpu6050_module.rst:477
msgid "Calculate the deflection angle of the x-axis."
msgstr ""

#: ../2.2.6_mpu6050_module.rst:506
msgid "Read the values of the x axis, y axis and z axis on the acceleration sensor, convert the elements to accelerated speed value (gravity unit), and print them."
msgstr ""

#: ../2.2.6_mpu6050_module.rst:518
msgid "Phenomenon Picture"
msgstr ""
