# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, sunfounder
# This file is distributed under the same license as the SunFounder Da Vinci Kit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: SunFounder Da Vinci Kit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-08-06 17:51+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../1.1.6_led_dot_matrix.rst:2
msgid "1.1.6 LED Dot Matrix"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:5
msgid "Introduction"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:7
msgid "As the name suggests, an LED dot matrix is a matrix composed of LEDs. The lighting up and dimming of the LEDs formulate different characters and patterns."
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:12
msgid "Components"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:17
msgid "Principle"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:19
#: ../1.1.6_led_dot_matrix.rst:105
#: ../1.1.6_led_dot_matrix.rst:119
msgid "**LED Dot Matrix**"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:21
msgid "Generally, LED dot matrix can be categorized into two types: common cathode (CC) and common anode (CA). They look much alike, but internally the difference lies. You can tell by test. A CA one is used in this kit. You can see 788BS labeled at the side."
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:26
msgid "See the figure below. The pins are arranged at the two ends at the back. Take the label side for reference: pins on this end are pin 1-8, and oh the other are pin 9-16."
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:30
msgid "The external view:"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:35
msgid "Below the figures show their internal structure. You can see in a CA LED dot matrix, ROW represents the anode of the LED, and COL is cathode; it's contrary for a CC one. One thing in common: for both types, pin 13, 3, 4, 10, 6, 11, 15, and 16 are all COL, when pin 9, 14, 8, 12, 1, 7, 2, and 5 are all ROW. If you want to turn on the first LED at the top left corner, for a CA LED dot matrix, just set pin 9 as High and pin 13 as Low, and for a CC one, set pin 13 as High and pin 9 as Low. If you want to light up the whole first column, for CA, set pin 13 as Low and ROW 9, 14, 8, 12, 1, 7, 2, and 5 as High, when for CC, set pin 13 as High and ROW 9, 14, 8, 12, 1, 7, 2, and 5 as Low. Consider the following figures for better understanding."
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:47
msgid "The internal view:"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:51
msgid "Pin numbering corresponding to the above rows and columns:"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:54
msgid "**COL**"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:54
#: ../1.1.6_led_dot_matrix.rst:56
#: ../1.1.6_led_dot_matrix.rst:57
#: ../1.1.6_led_dot_matrix.rst:119
msgid "**1**"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:54
#: ../1.1.6_led_dot_matrix.rst:56
#: ../1.1.6_led_dot_matrix.rst:57
#: ../1.1.6_led_dot_matrix.rst:119
msgid "**2**"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:54
#: ../1.1.6_led_dot_matrix.rst:55
#: ../1.1.6_led_dot_matrix.rst:56
#: ../1.1.6_led_dot_matrix.rst:105
msgid "**3**"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:54
#: ../1.1.6_led_dot_matrix.rst:55
#: ../1.1.6_led_dot_matrix.rst:56
#: ../1.1.6_led_dot_matrix.rst:105
msgid "**4**"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:54
#: ../1.1.6_led_dot_matrix.rst:56
#: ../1.1.6_led_dot_matrix.rst:57
#: ../1.1.6_led_dot_matrix.rst:119
msgid "**5**"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:54
#: ../1.1.6_led_dot_matrix.rst:55
#: ../1.1.6_led_dot_matrix.rst:56
#: ../1.1.6_led_dot_matrix.rst:105
msgid "**6**"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:54
#: ../1.1.6_led_dot_matrix.rst:56
#: ../1.1.6_led_dot_matrix.rst:57
#: ../1.1.6_led_dot_matrix.rst:119
msgid "**7**"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:54
#: ../1.1.6_led_dot_matrix.rst:56
#: ../1.1.6_led_dot_matrix.rst:57
#: ../1.1.6_led_dot_matrix.rst:119
msgid "**8**"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:55
#: ../1.1.6_led_dot_matrix.rst:57
msgid "**Pin No.**"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:55
#: ../1.1.6_led_dot_matrix.rst:105
msgid "**13**"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:55
#: ../1.1.6_led_dot_matrix.rst:105
msgid "**10**"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:55
#: ../1.1.6_led_dot_matrix.rst:105
msgid "**11**"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:55
#: ../1.1.6_led_dot_matrix.rst:105
msgid "**15**"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:55
#: ../1.1.6_led_dot_matrix.rst:105
msgid "**16**"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:56
msgid "**ROW**"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:57
#: ../1.1.6_led_dot_matrix.rst:119
msgid "**9**"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:57
#: ../1.1.6_led_dot_matrix.rst:119
msgid "**14**"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:57
#: ../1.1.6_led_dot_matrix.rst:119
msgid "**12**"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:60
msgid "In addition, two 74HC595 chips are used here. One is to control the rows of the LED dot matrix while the other, the columns."
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:64
msgid "Schematic Diagram"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:67
msgid "T-Board Name"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:67
msgid "physical"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:67
msgid "wiringPi"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:67
msgid "BCM"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:68
msgid "GPIO17"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:68
msgid "Pin 11"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:68
msgid "0"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:68
msgid "17"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:69
msgid "GPIO18"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:69
msgid "Pin 12"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:69
msgid "1"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:69
msgid "18"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:70
msgid "GPIO27"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:70
msgid "Pin 13"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:70
msgid "2"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:70
msgid "27"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:76
msgid "Experimental Procedures"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:78
msgid "**Step 1:** Build the circuit. Since the wiring is complicated, let's make it step by step. First, insert the T-Cobbler, the LED dot matrix and two 74HC595 chips into breadboard. Connect the 3.3V and GND of the T-Cobbler to holes on the two sides of the board, then hook up pin16 and 10 of the two 74HC595 chips to VCC, pin 13 and pin 8 to GND."
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:85
msgid "In the Fritzing image above, the side with label is at the bottom."
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:89
msgid "**Step 2:** Connect pin 11 of the two 74HC595 together, and then to GPIO27; then pin 12 of the two chips, and to GPIO18; next, pin 14 of the 74HC595 on the left side to GPIO17 and pin 9 to pin 14 of the second 74HC595."
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:97
msgid "**Step 3:** The 74HC595 on the right side is to control columns of the LED dot matrix. See the table below for the mapping. Therefore, Q0-Q7 pins of the 74HC595 are mapped with pin 13, 3, 4, 10, 6, 11, 15, and 16 respectively."
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:103
#: ../1.1.6_led_dot_matrix.rst:117
msgid "**74HC595**"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:103
#: ../1.1.6_led_dot_matrix.rst:117
msgid "**Q0**"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:103
#: ../1.1.6_led_dot_matrix.rst:117
msgid "**Q1**"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:103
#: ../1.1.6_led_dot_matrix.rst:117
msgid "**Q2**"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:103
#: ../1.1.6_led_dot_matrix.rst:117
msgid "**Q3**"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:103
#: ../1.1.6_led_dot_matrix.rst:117
msgid "**Q4**"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:103
#: ../1.1.6_led_dot_matrix.rst:117
msgid "**Q5**"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:103
#: ../1.1.6_led_dot_matrix.rst:117
msgid "**Q6**"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:103
#: ../1.1.6_led_dot_matrix.rst:117
msgid "**Q7**"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:111
msgid "**Step 4:** Now connect the ROWs of the LED dot matrix. The 74HC595 on the left controls ROW of the LED dot matrix. See the table below for the mapping. We can see, Q0-Q7 of the 74HC595 on the left are mapped with pin 9, 14, 8, 12, 1, 7, 2, and 5 respectively."
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:125
msgid "For C Language Users"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:127
msgid "**Step 5:** Go to the folder of code."
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:137
msgid "**Step 6:** Compile."
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:147
msgid "**Step 7:** Run."
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:157
#: ../1.1.6_led_dot_matrix.rst:300
msgid "After the code runs, the LED dot matrix lights up and out row by row and column by column."
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:160
#: ../1.1.6_led_dot_matrix.rst:302
msgid "**Code**"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:226
#: ../1.1.6_led_dot_matrix.rst:370
msgid "**Code Explanation**"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:233
msgid "The array code_H represents the elements of the LED dot matrix row, and the array code_L refers to the elements of the column. When characters are displayed, an element in row and one in column are acquired and assigned to the two HC595 chips respectively. Thus a pattern is shown on the LED dot matrix. Take the first number of code_H, 0x01 and the first number of code_L, 0x00 as examples."
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:236
#: ../1.1.6_led_dot_matrix.rst:380
msgid "0x01 converted to binary becomes 00000001; 0x00 converted to binary becomes 0000 0000."
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:238
msgid "In this kit, common anode LED dot matrix display is applied, so only the eight LEDs in the eighth row light up. When the conditions that code H is 0xff and code_L is 0x7f are met simultaneously, these 8 LEDs in the first column are lit."
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:253
msgid "Write the value of dat to pin SDI of the HC595 bit by bit. SRCLK's initial value was set to 0, and here it's set to 1, which is to generate a rising edge pulse, then shift the pinSDI(DS) date to shift register."
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:262
msgid "RCLK's initial value was set to 0, and here it's set to 1, which is to generate a rising edge, then shift data from shift register to storage register."
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:275
msgid "In this loop, these 20  elements in the two arrays, code_L and code_H will be uploaded to the two 74HC595 chip one by one. Then call the function, hc595_out() to shift data from shift register to storage register."
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:278
msgid "For Python Language Users"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:280
msgid "**Step 5:** Get into the folder of code."
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:290
msgid "**Step 6:** Run."
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:306
msgid "You can **Modify/Reset/Copy/Run/Stop** the code below. But before that, you need to go to  source code path like ``davinci-kit-for-raspberry-pi\\\\python``."
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:377
msgid "The array code_H represents the elements of the matix row, and the array code_L refers to the elements of the column. When characters are displayed, an element in row and one in column are acquired and assigned to the two HC595 chips respectively. Thus a pattern is shown on the LED dot  matrix. Take the first number of code_H, 0x01 and the first number of code_L, 0x00 as examples."
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:382
msgid "In this kit, common anode LED dot matrix is applied, so only the eight LEDs in the eighth row light up. When the conditions that code H is 0xff and code_L is 0x7f are met simultaneously, these 8 LEDs in the first column are lit."
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:393
msgid "In this loop, these 20 elements in the two arrays, code_L and code_H will be uploaded to the HC595 chip one by one."
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:396
msgid "If you want to display characters on the LED dot matrix, please refer to a python code: https://github.com/sunfounder/SunFounder_Dot_Matrix"
msgstr ""

#: ../1.1.6_led_dot_matrix.rst:399
msgid "Phenomenon Picture"
msgstr ""
