# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, sunfounder
# This file is distributed under the same license as the SunFounder Da Vinci Kit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: SunFounder Da Vinci Kit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-08-10 11:29+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../3.1.14_game_not_not.rst:2
msgid "3.1.14 GAME– Not Not"
msgstr ""

#: ../3.1.14_game_not_not.rst:5
msgid "Introduction"
msgstr ""

#: ../3.1.14_game_not_not.rst:7
msgid "In this lesson, we will make an interesting game device, and we call it \"Not Not\"."
msgstr ""

#: ../3.1.14_game_not_not.rst:9
msgid "During the game, the dot matrix will refresh an arrow randomly. What you need to do is to press the button in the opposite direction of the arrow within a limited time. If the time is up, or if the button in the same direction as the arrow is pressed, you are out."
msgstr ""

#: ../3.1.14_game_not_not.rst:11
msgid "This game can really practice your reverse thinking, and now shall we have a try?"
msgstr ""

#: ../3.1.14_game_not_not.rst:14
msgid "Components"
msgstr ""

#: ../3.1.14_game_not_not.rst:20
msgid "Schematic Diagram"
msgstr ""

#: ../3.1.14_game_not_not.rst:23
msgid "T-Board Name"
msgstr ""

#: ../3.1.14_game_not_not.rst:23
msgid "physical"
msgstr ""

#: ../3.1.14_game_not_not.rst:23
msgid "wiringPi"
msgstr ""

#: ../3.1.14_game_not_not.rst:23
msgid "BCM"
msgstr ""

#: ../3.1.14_game_not_not.rst:24
msgid "GPIO17"
msgstr ""

#: ../3.1.14_game_not_not.rst:24
msgid "Pin 11"
msgstr ""

#: ../3.1.14_game_not_not.rst:24
msgid "0"
msgstr ""

#: ../3.1.14_game_not_not.rst:24
msgid "17"
msgstr ""

#: ../3.1.14_game_not_not.rst:25
msgid "GPIO18"
msgstr ""

#: ../3.1.14_game_not_not.rst:25
msgid "Pin 12"
msgstr ""

#: ../3.1.14_game_not_not.rst:25
msgid "1"
msgstr ""

#: ../3.1.14_game_not_not.rst:25
msgid "18"
msgstr ""

#: ../3.1.14_game_not_not.rst:26
msgid "GPIO27"
msgstr ""

#: ../3.1.14_game_not_not.rst:26
msgid "Pin 13"
msgstr ""

#: ../3.1.14_game_not_not.rst:26
msgid "2"
msgstr ""

#: ../3.1.14_game_not_not.rst:26
msgid "27"
msgstr ""

#: ../3.1.14_game_not_not.rst:27
msgid "GPIO20"
msgstr ""

#: ../3.1.14_game_not_not.rst:27
msgid "Pin 38"
msgstr ""

#: ../3.1.14_game_not_not.rst:27
msgid "28"
msgstr ""

#: ../3.1.14_game_not_not.rst:27
msgid "20"
msgstr ""

#: ../3.1.14_game_not_not.rst:28
msgid "GPIO26"
msgstr ""

#: ../3.1.14_game_not_not.rst:28
msgid "Pin 37"
msgstr ""

#: ../3.1.14_game_not_not.rst:28
msgid "25"
msgstr ""

#: ../3.1.14_game_not_not.rst:28
msgid "26"
msgstr ""

#: ../3.1.14_game_not_not.rst:35
msgid "Experimental Procedures"
msgstr ""

#: ../3.1.14_game_not_not.rst:37
msgid "**Step 1:** Build the circuit."
msgstr ""

#: ../3.1.14_game_not_not.rst:42
msgid "**For C Language Users**"
msgstr ""

#: ../3.1.14_game_not_not.rst:44
msgid "**Step 2:** Go to the folder of code."
msgstr ""

#: ../3.1.14_game_not_not.rst:54
msgid "**Step 3**: Compile."
msgstr ""

#: ../3.1.14_game_not_not.rst:64
msgid "**Step 4**: Run."
msgstr ""

#: ../3.1.14_game_not_not.rst:74
msgid "After the program starts, a left or right arrow will be refreshed at random on the dot matrix. What you need to do is to press the button in the opposite direction of the arrow within a limited time. Then “\\ **√**\\ ” appears on the dot matrix. If the time is up, or if the button in the same direction as the arrow is pressed, you are out and the dot matrix displays “x”. You can also add 2 new buttons or replace them with Joystick keys for up, down, left and right— 4 directions to increase the difficulty of the game."
msgstr ""

#: ../3.1.14_game_not_not.rst:83
#: ../3.1.14_game_not_not.rst:436
msgid "**Code Explanation**"
msgstr ""

#: ../3.1.14_game_not_not.rst:85
#: ../3.1.14_game_not_not.rst:438
msgid "Based on **1.1.6 LED Dot Matrix**, this lesson adds **2** buttons to make an amusing game device. So, if you are not very familiar with the dot matrix, please refer to :ref:`1.1.6 LED Dot Matrix`."
msgstr ""

#: ../3.1.14_game_not_not.rst:89
#: ../3.1.14_game_not_not.rst:442
msgid "The whole program process is as below:"
msgstr ""

#: ../3.1.14_game_not_not.rst:91
#: ../3.1.14_game_not_not.rst:446
msgid "Randomly select an arrow direction and generate **timer 1**."
msgstr ""

#: ../3.1.14_game_not_not.rst:93
msgid "Display the arrow image on the dot matrix."
msgstr ""

#: ../3.1.14_game_not_not.rst:95
#: ../3.1.14_game_not_not.rst:450
msgid "Judge the button input. If the button is pressed or **timer 1** reminds time’s up, judgement starts."
msgstr ""

#: ../3.1.14_game_not_not.rst:98
#: ../3.1.14_game_not_not.rst:453
msgid "Display the image on the basis of a judging result; meanwhile, generate **timer 2**."
msgstr ""

#: ../3.1.14_game_not_not.rst:101
#: ../3.1.14_game_not_not.rst:456
msgid "Rerun **step 1** when **timer 2** reminds time’s up."
msgstr ""

#: ../3.1.14_game_not_not.rst:124
msgid "GLYPH structure works like a dictionary: the **word** attribute corresponds to the **key** on the dictionary; the **code** attribute corresponds to the **value**."
msgstr ""

#: ../3.1.14_game_not_not.rst:128
msgid "Here, code is used to store an array for dot matrix to display images (an 8x8 bit array)."
msgstr ""

#: ../3.1.14_game_not_not.rst:131
msgid "Here, the array **arrow** can be used to display the arrow pattern in up, down, left and right directions on the LED dot matrix."
msgstr ""

#: ../3.1.14_game_not_not.rst:134
msgid "Now **down** and **up** are commented and uncomment them if needed."
msgstr ""

#: ../3.1.14_game_not_not.rst:136
msgid "The array **check** is used to display these two images: ”\\ **×**\\ ” and ”\\ **√**\\ ”."
msgstr ""

#: ../3.1.14_game_not_not.rst:150
msgid "The function **lookup()** works by “checking the dictionary”. Define a **key,** search the same words as **key** in the structure **GLYPH \\*glyph** and return the corresponding information— “\\ **code**\\ ” of the certain word."
msgstr ""

#: ../3.1.14_game_not_not.rst:155
msgid "The function **Strcmp()** is used to compare the identity of two character strings **glyph[i].word** and **key**; if the identity is judged, return **glyph[i].code** ( as shown)."
msgstr ""

#: ../3.1.14_game_not_not.rst:169
#: ../3.1.14_game_not_not.rst:508
msgid "Display the specified pattern on the dot matrix."
msgstr ""

#: ../3.1.14_game_not_not.rst:181
#: ../3.1.14_game_not_not.rst:521
msgid "The function **createGlyph()** is used to randomly select a direction (the word attribute of an element in the array **arrow[]:** “\\ **left**\\ ”, “\\ **right**\\ ”... ). Set the stage as “PLAY” and start a 2-second alarm clock function."
msgstr ""

#: ../3.1.14_game_not_not.rst:186
msgid "**srand(time(NULL)):** Initializes random seeds that are from the system clock."
msgstr ""

#: ../3.1.14_game_not_not.rst:189
msgid "**(sizeof(arrow)/sizeof(arrow[0]))：**\\ Get the length of the array, the outcome is 2."
msgstr ""

#: ../3.1.14_game_not_not.rst:192
msgid "**rand()%2:** The remainder is **0** or **1,** gotten from dividing a generated random number by 2\\ **.**"
msgstr ""

#: ../3.1.14_game_not_not.rst:195
msgid "**waypoint=arrow[i].word:** The outcome should be “right” or “left”."
msgstr ""

#: ../3.1.14_game_not_not.rst:212
msgid "checkPoint() is used to check the button input; if the button is not pressed or the button in the same direction as the arrow is pressed, the outcome of the waypoint is wrong and “\\ **x**\\ ” appears on the dot matrix. Otherwise, the waypoint is right and dot matrix displays “\\ **√**\\ ”. Here the **stage** is **CHECK,** and there can be set a 1-second alarm clock function."
msgstr ""

#: ../3.1.14_game_not_not.rst:219
msgid "alarm() is also called “alarm clock”, in which a timer can be set, and it sends **SIGALRM** signals to the progress when the defined time is up."
msgstr ""

#: ../3.1.14_game_not_not.rst:232
msgid "getKey() reads the states of the these two buttons; if the right button is pressed, the parameter of the function checkPoint() is **right** and if the left button is pressed, the parameter is **left**."
msgstr ""

#: ../3.1.14_game_not_not.rst:247
msgid "Previously, timer() was called when set as the alarm() time’s up. Then under the “PLAY” mode, checkPoint() is to be called to judge the outcome. If the program is set to “CHECK” mode, the function createGlyph() should be called to select new patterns."
msgstr ""

#: ../3.1.14_game_not_not.rst:274
msgid "The working of the function signal(SIGALRM,timer): calling the timer() function when a SIGALRM signal (generated by the alarm clock function alarm()) is received."
msgstr ""

#: ../3.1.14_game_not_not.rst:278
#: ../3.1.14_game_not_not.rst:471
msgid "When the program starts, call createGlyph() one time at first and then start the loop."
msgstr ""

#: ../3.1.14_game_not_not.rst:281
#: ../3.1.14_game_not_not.rst:474
msgid "In the loop: under PLAY mode, the dot matrix displays arrow patterns and check the button state; if under CHECK mode, what is displayed is “\\ **x**\\ ” or “\\ **√**\\ ”."
msgstr ""

#: ../3.1.14_game_not_not.rst:286
msgid "**For Python Language Users**"
msgstr ""

#: ../3.1.14_game_not_not.rst:288
msgid "**Step 2**: Get into the folder of code."
msgstr ""

#: ../3.1.14_game_not_not.rst:298
msgid "**Step 3**: Run."
msgstr ""

#: ../3.1.14_game_not_not.rst:308
msgid "After starting the program, on the dot matrix appears an arrow pointing to the right or the left. What you need to do is to press the button in the opposite direction of the arrow within a limited time. Then “\\ **√**\\ ” appears on the dot matrix. If the time is up, or if the button in the same direction as the arrow is pressed, you are out and the dot matrix displays “x”. You can also add 2 new buttons or replace them with Joystick keys for up, down, left and right— 4 directions to increase the difficulty of the game."
msgstr ""

#: ../3.1.14_game_not_not.rst:317
msgid "**Code**"
msgstr ""

#: ../3.1.14_game_not_not.rst:321
msgid "You can **Modify/Reset/Copy/Run/Stop** the code below. But before that, you need to go to  source code path like ``davinci-kit-for-raspberry-pi\\\\python``."
msgstr ""

#: ../3.1.14_game_not_not.rst:448
msgid "Display the corresponding arrow image on the dot matrix."
msgstr ""

#: ../3.1.14_game_not_not.rst:469
msgid "Main() contains the whole running process."
msgstr ""

#: ../3.1.14_game_not_not.rst:491
msgid "Here, the **dictionary** arrow can be used to display the arrow pattern in up, down, left and right directions on the LED dot matrix."
msgstr ""

#: ../3.1.14_game_not_not.rst:494
msgid "Now down and up are commented and uncomment them if needed."
msgstr ""

#: ../3.1.14_game_not_not.rst:496
msgid "The **dictionary** check is used to display these two images: ”\\ **×**\\ ” and ”\\ **√**\\ ”."
msgstr ""

#: ../3.1.14_game_not_not.rst:526
msgid "**arrow.keys():** Select the keys “right”and “left” in the arrow array."
msgstr ""

#: ../3.1.14_game_not_not.rst:528
msgid "l\\ **ist(arrow.keys()):** Combine these keys into an array."
msgstr ""

#: ../3.1.14_game_not_not.rst:530
msgid "**random.choice(list(arrow.keys())):** Randomly select an element in the array."
msgstr ""

#: ../3.1.14_game_not_not.rst:533
msgid "So, The outcome of **waypoint=random.choice(list(arrow.keys()))** should be “right” or “left”."
msgstr ""

#: ../3.1.14_game_not_not.rst:551
msgid "checkPoint() is to detect the current state of button input:"
msgstr ""

#: ../3.1.14_game_not_not.rst:553
msgid "If no button is pressed or the button in the same direction as the the arrow is pressed, the assigned value of the **``waypoint``** is **``wrong``** and there displays ``x`` on the dot matrix."
msgstr ""

#: ../3.1.14_game_not_not.rst:557
msgid "Otherwise, the waypoint is right and “\\ **√**\\ ” appears."
msgstr ""

#: ../3.1.14_game_not_not.rst:559
msgid "Now the stage is **CHECK** and start a 1-second timer **timerCheck** to call the function creatGlyph() in a second."
msgstr ""

#: ../3.1.14_game_not_not.rst:567
msgid "In the function timeout(), set the parameter of checkPoint() as ”\\ **empty**\\ ”."
msgstr ""

#: ../3.1.14_game_not_not.rst:578
msgid "getKey() reads the state of these two buttons, and if the right button is pressed, the parameter of checkPoint() is **right**; if the left button is pressed, the parameter is **left**."
msgstr ""

#: ../3.1.14_game_not_not.rst:583
msgid "Phenomenon Picture"
msgstr ""
