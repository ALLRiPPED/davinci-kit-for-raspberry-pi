# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, sunfounder
# This file is distributed under the same license as the SunFounder Da Vinci Kit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: SunFounder Da Vinci Kit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-08-04 15:50+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../processing/dot_on_the_swing.rst:2
msgid "Dot on the Swing"
msgstr ""

#: ../processing/dot_on_the_swing.rst:4
msgid "In this project, 3 buttons are connected, one to change the size of the dot, one to change the position and the last one to change the color. If you press all 3 buttons at the same time, you will get a dot that is swinging and has a variable color."
msgstr ""

#: ../processing/dot_on_the_swing.rst:9
msgid "**Wiring**"
msgstr ""

#: ../processing/dot_on_the_swing.rst:13
msgid "**Sketch**"
msgstr ""

#: ../processing/dot_on_the_swing.rst:107
msgid "**How it works?**"
msgstr ""

#: ../processing/dot_on_the_swing.rst:109
msgid "Instead of drawing dot directly, we create a ``Dot`` class here. Then, declare the object (in this case ``myDot``)."
msgstr ""

#: ../processing/dot_on_the_swing.rst:112
msgid "This is a simple way to draw dots with multiple identical properties. For example, if we add three functions to the dot in this project - change size, change position and change color - then each dot we declare will have the same function. We can use the same button to make them do the same thing, or we can use different buttons to control each dot separately."
msgstr ""

#: ../processing/dot_on_the_swing.rst:116
msgid "Using **classes** makes your sketch beautiful, powerful and flexible."
msgstr ""

#: ../processing/dot_on_the_swing.rst:118
msgid "`Class (computer programming) - Wikipedia <https://en.wikipedia.org/wiki/Class_(computer_programming)>`_"
msgstr ""

#: ../processing/dot_on_the_swing.rst:120
msgid "Next, let's take a closer look at the ``Dot`` class."
msgstr ""

#: ../processing/dot_on_the_swing.rst:127
msgid "In the declaration, it needs to pass in four parameters, which are the X  and Y coordinate value of the position, the size, and the color (here it is set to the `HSB color mode <https://en.wikipedia.org/wiki/HSL_and_HSV>`_ )."
msgstr ""

#: ../processing/dot_on_the_swing.rst:129
msgid "Each parameter will be assigned to 2 sets of values ​​(initial value and current value)."
msgstr ""

#: ../processing/dot_on_the_swing.rst:148
msgid "In addition to the initial value and the current value, there is also a set of range values. It is not difficult to understand that the initial value is used to determine the initial state of the dot (determined by the incoming parameters), while the current value will change within the range to make the dot move."
msgstr ""

#: ../processing/dot_on_the_swing.rst:150
msgid "Therefore, except for the X coordinate value, the current values of the other three parameters are calculated as follows:"
msgstr ""

#: ../processing/dot_on_the_swing.rst:167
msgid "If you are familiar with trigonometric functions, it should not be difficult to understand `sine and cosine <https://en.wikipedia.org/wiki/Sine>`_, which gives a smooth periodic change (from -1 to 1) of the current value of the dot."
msgstr ""

#: ../processing/dot_on_the_swing.rst:169
msgid "We also need to add a seed, ``timer``, for the periodic variation. It adds the fixed value in the method ``update()`` and is called in ``draw()``."
msgstr ""

#: ../processing/dot_on_the_swing.rst:177
msgid "Finally, the dot is displayed according to the current value using the method ``show()``, which is also called in ``draw()``."
msgstr ""

#: ../processing/dot_on_the_swing.rst:186
msgid "**What more?**"
msgstr ""

#: ../processing/dot_on_the_swing.rst:188
msgid "Having mastered the use of classes, you can already draw multiple dots with the same properties, so why not try to do something cooler. For example, how about drawing a stable binary star system, or making a 'DUET' game?"
msgstr ""

#: ../processing/dot_on_the_swing.rst:192
msgid "For more please refer to `Processing Reference <https://processing.org/reference/>`_."
msgstr ""
