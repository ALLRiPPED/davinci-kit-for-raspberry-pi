# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, sunfounder
# This file is distributed under the same license as the SunFounder Da Vinci Kit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: SunFounder Da Vinci Kit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-08-06 17:58+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../2.1.1_button.rst:2
msgid "2.1.1 Button"
msgstr ""

#: ../2.1.1_button.rst:5
msgid "Introduction"
msgstr ""

#: ../2.1.1_button.rst:7
msgid "In this lesson, we will learn how to turn on or off the LED by using a button."
msgstr ""

#: ../2.1.1_button.rst:11
msgid "Components"
msgstr ""

#: ../2.1.1_button.rst:17
msgid "Principle"
msgstr ""

#: ../2.1.1_button.rst:19
msgid "**Button**"
msgstr ""

#: ../2.1.1_button.rst:22
msgid "Button is a common component used to control electronic devices. It is usually used as switch to connect or break circuits. Although buttons come in a variety of sizes and shapes, the one used here is a 6mm mini-button as shown in the following pictures."
msgstr ""

#: ../2.1.1_button.rst:27
msgid "Two pins on the left are connected, and the one on the right is similar to the left, which is shown below:"
msgstr ""

#: ../2.1.1_button.rst:33
msgid "The symbol shown as below is usually used to represent a button in circuits."
msgstr ""

#: ../2.1.1_button.rst:40
msgid "When the button is pressed, the 4 pins are connected, thus closing the circuit."
msgstr ""

#: ../2.1.1_button.rst:44
msgid "Schematic Diagram"
msgstr ""

#: ../2.1.1_button.rst:46
msgid "Use a normally open button as the input of Raspberry Pi, the connection is shown in the schematic diagram below. When the button is pressed, the GPIO18 will turn into low level (0V). We can detect the state of the GPIO18 through programming. That is, if the GPIO18 turns into low level, it means the button is pressed. You can run the corresponding code when the button is pressed, and then the LED will light up."
msgstr ""

#: ../2.1.1_button.rst:54
msgid "The longer pin of the LED is the anode and the shorter one is the cathode."
msgstr ""

#: ../2.1.1_button.rst:64
msgid "Experimental Procedures"
msgstr ""

#: ../2.1.1_button.rst:66
msgid "**Step 1**: Build the circuit."
msgstr ""

#: ../2.1.1_button.rst:72
msgid "For C Language Users"
msgstr ""

#: ../2.1.1_button.rst:74
#: ../2.1.1_button.rst:198
msgid "**Step 2**: Open the code file."
msgstr ""

#: ../2.1.1_button.rst:85
msgid "Change directory to the path of the code in this experiment via **cd**."
msgstr ""

#: ../2.1.1_button.rst:87
msgid "**Step 3**: Compile the code."
msgstr ""

#: ../2.1.1_button.rst:97
msgid "**Step 4**: Run the executable file."
msgstr ""

#: ../2.1.1_button.rst:107
msgid "After the code runs, press the button, the LED lights up; otherwise, turns off."
msgstr ""

#: ../2.1.1_button.rst:110
#: ../2.1.1_button.rst:222
msgid "**Code**"
msgstr ""

#: ../2.1.1_button.rst:147
#: ../2.1.1_button.rst:288
msgid "**Code Explanation**"
msgstr ""

#: ../2.1.1_button.rst:153
msgid "Pin GPIO17 in the T_Extension Board is equal to the GPIO0 in the wiringPi."
msgstr ""

#: ../2.1.1_button.rst:160
msgid "ButtonPin is connected to GPIO1."
msgstr ""

#: ../2.1.1_button.rst:166
msgid "Set LedPin as output to assign value to it."
msgstr ""

#: ../2.1.1_button.rst:172
msgid "Set ButtonPin as input to read the value of ButtonPin."
msgstr ""

#: ../2.1.1_button.rst:191
msgid "if (digitalRead (ButtonPin) == 0: check whether the button has been pressed. Execute digitalWrite(LedPin, LOW) when button is pressed to light up LED."
msgstr ""

#: ../2.1.1_button.rst:196
msgid "For Python Language Users"
msgstr ""

#: ../2.1.1_button.rst:208
msgid "**Step 3**: Run the code."
msgstr ""

#: ../2.1.1_button.rst:218
msgid "Now, press the button, and the LED will light up; press the button again, and the LED will go out. At the same time, the state of the LED will be printed on the screen."
msgstr ""

#: ../2.1.1_button.rst:226
msgid "You can **Modify/Reset/Copy/Run/Stop** the code below. But before that, you need to go to  source code path like ``davinci-kit-for-raspberry-pi\\\\python``."
msgstr ""

#: ../2.1.1_button.rst:294
msgid "Set GPIO17 as LED pin"
msgstr ""

#: ../2.1.1_button.rst:300
msgid "Set GPIO18 as button pin"
msgstr ""

#: ../2.1.1_button.rst:306
msgid "Set up a falling detect on BtnPin, and then when the value of BtnPin changes from a high level to a low level, it means that the button is pressed. The next step is calling the function, swled."
msgstr ""

#: ../2.1.1_button.rst:318
msgid "Define a callback function as button callback. When the button is pressed at the first timeï¼Œand the condition, not Led_status is false, GPIO.output() function is called to light up the LED. As the button is pressed once again, the state of LED will be converted from false to true, thus the LED will turn off."
msgstr ""

#: ../2.1.1_button.rst:325
msgid "Phenomenon Picture"
msgstr ""
