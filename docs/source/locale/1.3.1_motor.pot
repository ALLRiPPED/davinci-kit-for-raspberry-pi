# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, sunfounder
# This file is distributed under the same license as the SunFounder Da Vinci Kit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: SunFounder Da Vinci Kit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-08-07 09:33+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../1.3.1_motor.rst:2
msgid "1.3.1 Motor"
msgstr ""

#: ../1.3.1_motor.rst:5
msgid "Introduction"
msgstr ""

#: ../1.3.1_motor.rst:7
msgid "In this lesson, we will learn to how to use L293D to drive a DC motor and make it rotate clockwise and counterclockwise. Since the DC Motor needs a larger current, for safety purpose, here we use the Power Supply Module to supply motors."
msgstr ""

#: ../1.3.1_motor.rst:13
msgid "Components"
msgstr ""

#: ../1.3.1_motor.rst:19
msgid "Principle"
msgstr ""

#: ../1.3.1_motor.rst:21
msgid "**L293D**"
msgstr ""

#: ../1.3.1_motor.rst:23
msgid "L293D is a 4-channel motor driver integrated by chip with high voltage and high current. It's designed to connect to standard DTL, TTL logic level, and drive inductive loads (such as relay coils, DC, Stepper Motors) and power switching transistors etc. DC Motors are devices that turn DC electrical energy into mechanical energy. They are widely used in electrical drive for their superior speed regulation performance."
msgstr ""

#: ../1.3.1_motor.rst:30
msgid "See the figure of pins below. L293D has two pins (Vcc1 and Vcc2) for power supply. Vcc2 is used to supply power for the motor, while Vcc1 to supply for the chip. Since a small-sized DC motor is used here, connect both pins to +5V."
msgstr ""

#: ../1.3.1_motor.rst:38
msgid "The following is the internal structure of L293D. Pin EN is an enable pin and only works with high level; A stands for input and Y for output. You can see the relationship among them at the right bottom. When pin EN is High level, if A is High, Y outputs high level; if A is Low, Y outputs Low level. When pin EN is Low level, the L293D does not work."
msgstr ""

#: ../1.3.1_motor.rst:47
msgid "**DC Motor**"
msgstr ""

#: ../1.3.1_motor.rst:52
msgid "This is a 5V DC motor. It will rotate when you give the two terminals of the copper sheet one high and one low level. For convenience, you can weld the pins to it."
msgstr ""

#: ../1.3.1_motor.rst:59
msgid "**Power Supply Module**"
msgstr ""

#: ../1.3.1_motor.rst:61
msgid "In this experiment, it needs large currents to drive the motor especially when it starts and stops, which will severely interfere with the normal work of Raspberry Pi. Therefore, we separately supply power for the motor by this module to make it run safely and steadily."
msgstr ""

#: ../1.3.1_motor.rst:66
msgid "You can just plug it in the breadboard to supply power. It provides a voltage of 3.3V and 5V, and you can connect either via a jumper cap included."
msgstr ""

#: ../1.3.1_motor.rst:74
msgid "Schematic Diagram"
msgstr ""

#: ../1.3.1_motor.rst:76
msgid "Plug the power supply module in breadboard, and insert the jumper cap to pin of 5V, then it will output voltage of 5V. Connect pin 1 of L293D to GPIO22, and set it as high level. Connect pin2 to GPIO27, and pin7 to GPIO17, then set one pin high, while the other low. Thus you can change the motor’s rotation direction."
msgstr ""

#: ../1.3.1_motor.rst:86
msgid "Experimental Procedures"
msgstr ""

#: ../1.3.1_motor.rst:88
msgid "**Step 1:** Build the circuit."
msgstr ""

#: ../1.3.1_motor.rst:94
msgid "The power module can apply a 9V battery with the 9V Battery Buckle in the kit. Insert the jumper cap of the power module into the 5V bus strips of the breadboard."
msgstr ""

#: ../1.3.1_motor.rst:102
msgid "For C Language Users"
msgstr ""

#: ../1.3.1_motor.rst:104
#: ../1.3.1_motor.rst:234
msgid "**Step 2**: Get into the folder of the code."
msgstr ""

#: ../1.3.1_motor.rst:114
msgid "**Step 3**: Compile."
msgstr ""

#: ../1.3.1_motor.rst:124
msgid "**Step 4**: Run the executable file above."
msgstr ""

#: ../1.3.1_motor.rst:134
#: ../1.3.1_motor.rst:254
msgid "As the code runs, the motor first rotates clockwise for 5s then stops for 5s, after that, it rotates anticlockwise for 5s; subsequently, the motor stops for 5s. This series of actions will be executed repeatedly."
msgstr ""

#: ../1.3.1_motor.rst:138
#: ../1.3.1_motor.rst:258
msgid "**Code**"
msgstr ""

#: ../1.3.1_motor.rst:191
#: ../1.3.1_motor.rst:394
msgid "**Code Explanation**"
msgstr ""

#: ../1.3.1_motor.rst:197
msgid "Enable the L239D."
msgstr ""

#: ../1.3.1_motor.rst:204
msgid "Set a high level for 2A(pin 7); since 1,2EN(pin 1) is in high level, 2Y will output high level."
msgstr ""

#: ../1.3.1_motor.rst:207
msgid "Set a low level for 1A, then 1Y will output low level, and the motor will rotate."
msgstr ""

#: ../1.3.1_motor.rst:216
msgid "this loop is to delay for 3*1000ms."
msgstr ""

#: ../1.3.1_motor.rst:222
msgid "If 1,2EN (pin1) is in low level, L293D does not work. Motor stops rotating."
msgstr ""

#: ../1.3.1_motor.rst:229
msgid "Reverse the current flow of the motor, then the motor will rotate reversely."
msgstr ""

#: ../1.3.1_motor.rst:232
msgid "For Python Language Users"
msgstr ""

#: ../1.3.1_motor.rst:244
msgid "**Step 3**: Run."
msgstr ""

#: ../1.3.1_motor.rst:262
msgid "You can **Modify/Reset/Copy/Run/Stop** the code below. But before that, you need to go to  source code path like ``davinci-kit-for-raspberry-pi\\\\python``."
msgstr ""

#: ../1.3.1_motor.rst:409
msgid "Create a function, **motor()** whose variable is direction. As the condition that direction=1 is met, the motor rotates clockwise; when direction=-1, the motor rotates anticlockwise; and under the condition that direction=0, it stops rotating."
msgstr ""

#: ../1.3.1_motor.rst:434
msgid "In the main（）function, create an array, directions[], in which CW is equal to 1, the value of CCW is -1, and the number 0 refers to Stop."
msgstr ""

#: ../1.3.1_motor.rst:437
msgid "As the code runs, the motor first rotates clockwise for 5s then stop for 5s, after that, it rotates anticlockwise for 5s; subsequently, the motor stops for 5s. This series of actions will be executed repeatedly."
msgstr ""

#: ../1.3.1_motor.rst:441
msgid "Now, you should see the motor blade rotating."
msgstr ""

#: ../1.3.1_motor.rst:444
msgid "Phenomenon Picture"
msgstr ""
